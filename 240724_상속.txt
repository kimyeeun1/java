	상속(확장)
-	부모클래스의 속성과 기능을 자식클래스에게 그대로 물려주는 것
-	기존의 클래스를 상속받아 필요한 변수나 기능만 추가하는 방법

	SOLID 원칙
-	SRP: 단일책임의 원칙. 하나의 메소드는 하나의 기능만 가짐.
-	OCP: 개방 폐쇄 원칙. 기존 구성요소는 수정이 일어나지 말아야 하며, 기존 구성요소를 쉽게 확장해서 재사용할 수 있어야 한다.
-	
	메소드 오버로딩과 메소드 오버라이딩의 차이
-	메소드 오버로딩: 같은 클래스 내 메소드 이름은 같지만 타입이 다른 경우
-	메소드 오버라이딩: 상속된 클래스에 같은 이름의 메소드를 생성한 경우

	상속의 유연성(상속의 확장성)
-	상속은 기존의 클래스에서 확장한 것으로 부모 클래스를 수정할 경우 자식 클래스에서 수정된 내용을 즉시 사용할 수 있다
-	상속은 클래스 속성이나 기능의 추가, 수정, 삭제를 유연하게 처리해준다

	상속이 불가능한 final class

	상속을 제한하는 sealed class

	다형성

	객체지향프로그래밍의 4가지 특징

-	캡슐화: 여러 기능을 메소드로 묶어 처리한다.
-	추상화: 기능의 정의만 존재하고 구현하지 않는다
-	다형성: 상속 및 구현 대상 타입에 포함되는 것을 허가한다
-	상속: 부모클래스의 모든 속성, 기능을 확장한다

	Is a 관계를 이용한 다형성
-	상속 관계에 있는 클래스들의 규칙
①	Sub class is a Super class
I.	Sub class: 상속을 받아 확장한 클래스
II.	Super class: 상속의 대상이 되는 클래스
